// Todd Pieper - CPSC2430 - Lab 4
//PetHeap.h , prototypes of functions defined in PetHeap.cpp and used in Lab4.cpp
#ifndef PETHEAP_H
#define PETHEAP_H

#include <iostream>
#include <string>
using namespace std;


const int HEAP_MAX_SIZE = 1000;
class PetHeap {

private:

    struct Pet {

      string name;
      int age;

      Pet();
      Pet(string petName, int petAge);

    };
  
    Pet* petHeap[HEAP_MAX_SIZE];
    int size;
    void percolateUp(int index);
    void percolateDown(int index);
    void deleteMax();
    Pet* peekMax();
    void swapData(int index1, int index2);
    char whichChildrenToCheck(int index);
    Pet* petMax(Pet* pet1, Pet* pet2);

public:

    PetHeap();

    void displayNewMax();
    void insert(string petName, int petAge);
    void adoptOldestPet();
    int numPets();
    void displayPets();
    void deallocateLeftovers();
  
}; //end of class
#endif
